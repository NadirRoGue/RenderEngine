#version 400

layout( vertices=3 ) out;

uniform int LOD;

uniform int LODLimit;

layout (location=2) in vec3 inNormal[];
layout (location=3) in vec2 inUV[];

layout (location=2) out vec3 outNormal[];
layout (location=3) out vec2 outUV[];

void main()
{
	outUV[gl_InvocationID] = inUV[gl_InvocationID];
	outNormal[gl_InvocationID] = inNormal[gl_InvocationID];
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;

	int realLod = LODLimit - LOD;
	int innerLod = mod(realLod, 2) != 0? realLod : (realLod - 1 < 1? 1 : realLod - 1);

	gl_TessLevelOuter[0] = innerLod;
	gl_TessLevelOuter[1] = innerLod;
	gl_TessLevelOuter[2] = innerLod;
	gl_TessLevelInner[0] = realLod;
}
