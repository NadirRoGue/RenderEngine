#version 450 core

layout( vertices=4 ) out; 

//layout (location=0) in vec3 inNormal[];
//layout (location=1) in vec2 inUV[];

//layout (location=0) out vec3 outNormal[];
//layout (location=1) out vec2 outUV[];

in vec3 vNormal[];
in vec2 vUV[];

out vec3 tcNormal[];
out vec2 tcUV[];

void main()
{
	tcUV[gl_InvocationID] = vUV[gl_InvocationID];
	tcNormal[gl_InvocationID] = vNormal[gl_InvocationID];
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;

	gl_TessLevelOuter[0] = 20;
	gl_TessLevelOuter[1] = 20;
	gl_TessLevelOuter[2] = 20;
	gl_TessLevelOuter[3] = 20;
	gl_TessLevelInner[0] = 20;
	gl_TessLevelInner[1] = 20;
}